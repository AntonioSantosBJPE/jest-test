{
  "openapi": "3.0.1",
  "info": {
    "title": "Jet-Test-API",
    "description": "Jet-Test-API é uma API RESTful desenvolvida utilizando Node.js, Express, TypeORM e um banco de dados MySQL. Ela permite o upload de arquivos no formato csv, com o intuito de cadastrar uma lista clientes. Permite exportar em formato csv a lista de clientes cadastrados. Também é possível realizar um crud completo de operadores, onde os mesmos possuem uma lista de clientes. Ao ser realizado o upload de uma lista de clientes, eles são distribuídos de forma uniforme entre os operadores cadastrados, o mesmo acontece ao cadastrar ou deletar um operador, onde a lista de cliente é redistribuida.",
    "termsOfService": "http://localhost:4000/terms",
    "contact": {
      "email": "netoifpe@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://jet-test-production.up.railway.app/api-docs/",
      "description": "Ambiente de produção"
    },
    {
      "url": "http://localhost:4000/",
      "description": "Ambiente de Teste"
    }
  ],
  "paths": {
    "/clients": {
      "post": {
        "tags": ["Clients"],
        "summary": "Upload de lista de clientes",
        "description": "Esta rota é responsável por realizar o upload de um arquivo no formato .csv contendo uma lista de clientes a ser cadastrada na aplicação. A ordem dos dados nas linhas precisa ser: nome, nascimento, valor, email",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "description": "Arquivo CSV a ser enviado na solicitação. Por favor, use um campo de upload de arquivo para enviar o arquivo CSV."
          }
        ],
        "responses": {
          "201": {
            "description": "OK - Upload de arquivo realizado.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upload realizado com sucesso!"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request - Algum problema ocorreu com a requisição.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_field_name_invalid": {
                    "value": {
                      "message": "Unexpected field"
                    }
                  },
                  "bad_request_file_type_invalid": {
                    "value": {
                      "message": "Only csv format allowed"
                    }
                  },
                  "bad_request_no_file_sent": {
                    "value": {
                      "message": "No files uploaded"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/clients/export": {
      "get": {
        "tags": ["Clients"],
        "summary": "Exportar lista de clientes",
        "description": "Esta rota é responsável por exportar um arquivo csv contendo a lista de clientes cadastrada.",
        "produces": ["text/csv"],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Disposition": {
                "type": "text/csv",
                "description": "attachment; filename=clients.csv"
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/operators": {
      "post": {
        "tags": ["Operators"],
        "summary": "Cadastro de um novo operador",
        "description": "Esta rota é responsável por cadastrar um novo operador. Ao ser criado um novo operador, a os clientes são redistribuidos entre os operadores.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operator_create"
              },
              "example": {
                "name": "Operador 10"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK - Criação de operador realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operator_return"
                },
                "example": {
                  "id": 1,
                  "name": "Operador 10"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Alguma chave obrigatória não foi enviada ou está em um formato inválido.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "name": ["required"]
                      }
                    }
                  },
                  "bad_request_invalid_name": {
                    "value": {
                      "message": {
                        "name": ["Expected string", "received number"]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Tentativa de criar um operador com um nome já cadastrado",
            "content": {
              "application/json": {
                "example": {
                  "message": "Nome já existente, é necessário escolher outro nome!"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Operators"],
        "summary": "Listar todos os operadores",
        "description": "Esta rota é responsável por listar todos os operadores cadastrados, com seus clientes associados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Operador 10",
                    "clients": [
                      {
                        "id": 1,
                        "name": "Cliente 01",
                        "email": "cliente01@teste.com.br ",
                        "birthDate": "25/05/1985",
                        "value": "042.42"
                      },
                      {
                        "id": 2,
                        "name": "Cliente 02",
                        "email": "cliente02@teste.com.br ",
                        "birthDate": "18/11/1984",
                        "value": "835.39"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/operators/{operatorId}": {
      "get": {
        "tags": ["Operators"],
        "summary": "Listar um operador cadastrado",
        "description": "Esta rota é responsável por listar um operador cadastrado, com seus clientes associados. É necessaário enviar o ID do operador através do parâmetro.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "ID do operador",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Operador 10",
                    "clients": [
                      {
                        "id": 1,
                        "name": "Cliente 01",
                        "email": "cliente01@teste.com.br ",
                        "birthDate": "25/05/1985",
                        "value": "042.42"
                      },
                      {
                        "id": 2,
                        "name": "Cliente 02",
                        "email": "cliente02@teste.com.br ",
                        "birthDate": "18/11/1984",
                        "value": "835.39"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found - O operador não foi encontrado a partir do id enviado.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Operator not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Operators"],
        "summary": "Deletar um operador cadastrado",
        "description": "Esta rota é responsável por deletar um operador cadastrado. É necessaário enviar o ID do operador através do parâmetro.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "ID do operador",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK - Operador deletado com sucesso"
          },
          "404": {
            "description": "Not Found - O operador não foi encontrado a partir do id enviado.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Operator not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Operators"],
        "summary": "Atualizar um operador cadastrado",
        "description": "Esta rota é responsável por atualizar os dados de um operador cadastrado. É necessaário enviar o ID do operador através do parâmetro.",
        "parameters": [
          {
            "name": "operatorId",
            "in": "path",
            "description": "ID do operador",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operator_create"
              },
              "example": {
                "name": "Operador 10 Update"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK - Atualização de operador realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operator_return"
                },
                "example": {
                  "id": 1,
                  "name": "Operador 10 Update"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Alguma chave obrigatória não foi enviada ou está em um formato inválido.",
            "content": {
              "application/json": {
                "examples": {
                  "bad_request_keys_required": {
                    "value": {
                      "message": {
                        "name": ["required"]
                      }
                    }
                  },
                  "bad_request_invalid_name": {
                    "value": {
                      "message": {
                        "name": ["Expected string", "received number"]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Tentativa de criar um operador com um nome já cadastrado",
            "content": {
              "application/json": {
                "example": {
                  "message": "Nome já existente, é necessário escolher outro nome!"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Operator_create": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Operator_return": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "number"
          }
        }
      }
    }
  }
}
